[debug] [2019-05-11T08:39:09.822Z] ----------------------------------------------------------------------
[debug] [2019-05-11T08:39:09.826Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Bárbara\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2019-05-11T08:39:09.826Z] CLI Version:   6.9.2
[debug] [2019-05-11T08:39:09.826Z] Platform:      win32
[debug] [2019-05-11T08:39:09.826Z] Node Version:  v10.15.2
[debug] [2019-05-11T08:39:09.828Z] Time:          Sat May 11 2019 10:39:09 GMT+0200 (GMT+02:00)
[debug] [2019-05-11T08:39:09.828Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-05-11T08:39:09.838Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-05-11T08:39:09.839Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Bárbara\Desktop\SKYLAB\course\packaway

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-05-11T08:39:16.585Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?page_size=100  
 
[debug] [2019-05-11T08:39:16.985Z] <<< HTTP RESPONSE 200
[info] i  Using project packaway-72184 (packaway)
[info] 
=== Firestore Setup
[debug] [2019-05-11T08:39:19.621Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-05-11T08:39:19.622Z] > authorizing via signed-in user
[debug] [2019-05-11T08:39:19.623Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/packaway-72184  
 
[debug] [2019-05-11T08:39:19.912Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-05-11T08:39:27.345Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/packaway-72184/releases?pageSize=10&pageToken=  
 
[debug] [2019-05-11T08:39:28.169Z] <<< HTTP RESPONSE 200
[debug] [2019-05-11T08:39:28.169Z] Found ruleset: projects/packaway-72184/rulesets/9a7f2266-6b7d-4cc9-b2df-15eb5f9596f3
[debug] [2019-05-11T08:39:28.170Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/packaway-72184/rulesets/9a7f2266-6b7d-4cc9-b2df-15eb5f9596f3  
 
[debug] [2019-05-11T08:39:28.423Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-05-11T08:39:30.739Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/packaway-72184/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-05-11T08:39:30.739Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/packaway-72184/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-05-11T08:39:31.039Z] <<< HTTP RESPONSE 200
[debug] [2019-05-11T08:39:31.066Z] <<< HTTP RESPONSE 200
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2019-05-11T08:39:31.070Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-05-11T08:39:31.071Z] > authorizing via signed-in user
[debug] [2019-05-11T08:39:31.071Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/packaway-72184  
 
[debug] [2019-05-11T08:39:31.291Z] <<< HTTP RESPONSE 200
[debug] [2019-05-11T08:39:31.295Z] >>> HTTP REQUEST PATCH https://servicemanagement.googleapis.com/v1/services/cloudfunctions.googleapis.com/projectSettings/packaway-72184?updateMask=usageSettings  

[debug] [2019-05-11T08:39:31.296Z] >>> HTTP REQUEST PATCH https://servicemanagement.googleapis.com/v1/services/runtimeconfig.googleapis.com/projectSettings/packaway-72184?updateMask=usageSettings  

[debug] [2019-05-11T08:39:32.994Z] <<< HTTP RESPONSE 200
[debug] [2019-05-11T08:39:33.198Z] <<< HTTP RESPONSE 200
[info] +  Wrote functions/package.json
[info] +  Wrote functions/.eslintrc.json
[info] +  Wrote functions/index.js
[info] +  Wrote functions/.gitignore
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
